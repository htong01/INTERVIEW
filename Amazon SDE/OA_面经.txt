http://52.14.116.56/2017/09/03/Interview/Interview-Amazon-OA1-Logic/

https://wdxtub.com/interview/14520850399861.html


https://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=480213&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26sortid%3D311

---------------------------------------------------------------------------------------------------------------------------------
昨天做完的OA1，面经看了很多，都是理解的看的，没有背答案。要打开摄像头，我是用的纸和笔记录了字母顺序，但不推荐把面经打印下来，毕竟有摄像头的风险。

debug 题目很简单 都是地里的面经 题，只要认真看一下问题不大，注意也不要太快的做完。

第二部分reasoning 一定要认认真真准备！！ 之前一直听说简单， 所以我大概复习了半天左右就开始做了！
因为之前没背答案，只是理解的看了一遍，还有些是中文面经 就理解了下题意 就去做了。
然后时间就特别特别紧，最后好多题都是蒙的，当时心都碎了！不过好在后来过了。
所以一定要把那些特别长的理解题答案背过，因为真的没特别多的时间去读，现理解。. check 1point3acres for more.
大部分题都是面经历的，不过遇到了两个GRE 类似的逻辑题，没有见过。
有一个是讲ufo的，很多目击ufo的照片啥的都证明是假的，所以很多人说ufo不存在，
但很多科学家认为不能否认不存在，选项是虽然有些照片是假的 但不能说明ufo不存在。
然后还考了8仙桌， 录用人的问题。
心得就是 这种题必须背答案！
而且之前有人是没做完 OA1挂掉了，虽然不确定是不是只是因为没做完挂的，
但是一定要做完，最后没时间了蒙也要蒙上。
时间非常紧，有的答案要背下来
---------------------------------------------------------------------------------------------------------------------------------
oa1 看面经就行了，reansoning小土刀特别有用，几乎都是原题，可以节省很多时间
oa2 two closest sum和平均树，都是高频题
本来还准备了全职的work style的那些情景问答题，结果发现白准备了，实习就是一些agree/disagree的选项，说是有十分钟计时，然而并不计时

面试小哥是Alexa组的，全程反馈cool，人特别好，感恩~~
bq: biggest mistake; tight deadline
coding: 蠡口幺耳妖 股票题 加上返回哪天买进和卖出 即index
还问了hashset hashmap的区别  collision怎么处理等等 都比较基础
---------------------------------------------------------------------------------------------------------------------------------

2月7日压线做的oa1, oa2.

oa1其实有点慌，有2道都没有做出来。. From 1point 3acres bbs

然后oa2，大家翻翻地里，如果没记错，总共就8道不同的题目，我做的貌似是maximum average node和top 5(具体名字忘了）

然后就是2月9日收到邮件让选时间，我在18号到22号之间选了18号。

然后，就是18号面试。一个印度小哥。口音还好，但是特定的发音我听不懂。

先10分钟自我介绍+简单问问。

然后给我粘了一道题，讲解了5分钟。

大概就是给一堆未排序好的顾客购买记录(cistomID, itemID, timeStamp(购买时间))，然后要求出现次数最多的，连续3次购买的物品(需要是同一个顾客)。

举个例子，(1, A, 0), (1, B, 2), (1, C, 4), (1,D, 5), (2, A, 0), (2, B, 2), (2, C, 4).

那么A-B-C出现过两次，B-C-D出现过一次。

刚准备开始写，印度小哥说先和他解释一下。

我就说先排序，然后扫一遍，hashmap记录一下。

然后就问我，hashmap怎么实现，我说java里每个class有equal和hashcode函数，然后map里面有很多bucket，根据hashcode找到对应的bucket，然后用equal函数在里面找符合，如果没有，就添加进去。

然后他就问，如果collision多了不就慢了。

我就回答，所以average item per bucket多了就要double bucket size，然后rehash。

然后他又问，rehash时间复杂度。我说o(n)。

然后他又问，那为啥insertion的时间复杂度是o(1)。(这里，其实很尴尬，因为口音问题，我回答了好几次其他的东西才知道他到底想问啥)。我就说，每次是double bicket size，所以item放的越多，越往后面，所需要rehash的频率就越低，平均下来是o(1)，虽然rehash很费时。

然后他又问，如果不用系统的hashfunction咋办，我说自己写一个呗，然后20s敲了个简易的应该没啥问题的hashFunction。

这个过程大概持续10分钟。

然后终于让我写代码。然后，写了20分钟。问了几道我写的代码里几个简单的问题，然后就说great。

然后，面试到这里已经45分钟了，我以为要结束了。谁想到这时开始问bq。问了3道。
口音问题，第1题我完全没听懂，我问，他重复，依然没听懂，就这样尴尬了2分钟，继续下一个问题了(我当时因为这个是觉得我真要凉了)
第二题，问怎么对待ddl
第三题，问自己哪个project哪个部分最challenge。

---------------------------------------------------------------------------------------------------------------------------------

补充内容 (2019-1-28 07:45):
1. debug 的七道题时间很紧张，我记得的有 count element range, distinct element cout, remove vowels,剩下的不记得啦，想起来我再补充，都是把！- 改为-， 把 < 改为 > , 把&& 改为 || ，这种小错误

2. reasoning 前面的字母题 建议事先写好26个字母在草稿纸上，题目都不难，和小土刀上的类型一样，后面还有数字推理题，方向题，环保公司问题，招聘问题，四人位置问题，出差问题，都在面经可以找到，时间也挺紧张的

---------------------------------------------------------------------------------------------------------------------------------
第一轮：三哥 迟到五分钟 senior 严肃且不苟言笑 而且话筒没声音 五分钟之后终于折腾出来了声音。。。
BQ：问了一个简历上的项目 问的很详细 要求step by step
做题：给一个文件路径，要求找到在这个文件路径下所有符合条件的文件，如：文件小于10M，文件名和regex匹配
我问DFS还是BFS，对面说it's up to you 于是写了个DFS 写好之后对面表示满意 然后问如果现在有很多条件怎么办 如何提高代码的拓展性
我回答说另写一个check availbility的function，对面说不对，于是开始了漫长的扯皮和被吊打。。后来对面说其实我想考C++的interface，表示懵逼，虽然追安听说过但是根本不熟悉。。于是第一轮电面就在他教学我什么是interface中结束了。。同时还晚结束了五分钟。。

第二轮：白人女 三姐shadow 由于上一轮被占了这一轮只有四十分钟
BQ：most challenging project / can't meet deadline / can't agree with your teammates
题目：给了一个树，同时有一个预算，每次遍历一个叶子结点就从预算中减掉“当前叶子结点所在的层数”，问一共能遍历到几个叶子结点。
对树做BFS即可。还剩五分钟的时候问了几个Amazon的问题结束了

第三轮：三姐 口音很重完全听不懂。。。
BQ：most challenging project（again） / what do you learn from it. From 1point 3acres bbs
题目：top K frequent elements 先统计出现次数然后heap解决
分析了时间复杂度和一些corner case之后还剩五分钟，我以为大家可以愉快的说再见了结果对面又抛出来一道题。。find first non-duplicate element in datastream 要求O(1)-baidu 1point3acres
举个例子：0，1， 0， 3， 1， 4， 5为data stream，则每次插入之后，第一个non-duplicate element依次为：0， 0， 1， 1， 3， 3， 3 剩下时间来不及写代码了就简单说了hashmap + linkedlist的想法并且写到了text editor里，对面表示OK 然后准时结束了

个人感觉是他们家题不难，保持冷静仔细思考都能想出来，BQ要好好准备，对照amazon十四条多想一些自己之前的例子并且灵活化用，似乎对于最后的考核BQ和coding的占比是50% / 50%。对于new grad BQ不会特别偏门，most challenging project / can't meet deadline是高频，再就是简历要特别熟。

---------------------------------------------------------------------------------------------------------------------------------
OA1还是三部分
1.20 min的七道debug
2.35min的二十四道logic
两个都碰到不少原题，剩下的属于看心情随意填的work style，不限时。

1. removeElement: i++变i+1
2.有一个是我没见过的新题，但也比较容易，是说如果num array的长度是偶数，就全部value是0，反之都是1.
有两个地方需要改：1.加大括号 2.for loop的i+2变成i++
3.sortArray, >改<
4.checkGrade, || 变成 &&
其他就是改符号，加大括号这种的

字母和数字就不说了，字母表是好帮手

方向我是先画好东南西北，帮助很大
遇到了六圆桌问题，自定义表达式，motor效应，环保公司问题。

---------------------------------------------------------------------------------------------------------------------------------

两道高频题目： Q1：substring with distinct k characters。截取的字符串长度不限

Q2：max average sum of tree  这个树的节点使用arrayList存储，不是二叉树

---------------------------------------------------------------------------------------------------------------------------------
1. count the number of exact k distinct characters substrings（可以有重复substring）
2. top five review scores （求平均数）

---------------------------------------------------------------------------------------------------------------------------------
第一题是最常见的找最近的X个地址，用一个堆就能过所有test case。
第二题稍微不常见，给一个grid，1代表可走，0代表障碍，9代表目的地，初始时在左上方的位置并且这个位置保证是1，求走到9的最短步数，如果不可能返回-1。用简单的记忆化宽搜过所有用例。
第二题跟LC的063 Unique Paths II   很像
---------------------------------------------------------------------------------------------------------------------------------
1. 个一堆点 找到中心点（0， 0）
以下内容需要积分高于 120 您已经可以浏览

最近的K个点 返回List<List<Integer>>. max heap
2. 给两个list， 每个中取一个 其中组合能够最接近target值的所有可能（有可能多种组合都可以组合出那个最接近target的数）


---------------------------------------------------------------------------------------------------------------------------------
上个周日做完的, 90分钟, 2道编程题. 之后15分钟写不超过800字符你的解题思路.
第一道: 求最近的k个餐馆. 输入是每个餐馆的坐标. 
第二道: 输入飞机最大里程M, 和两个Array, 每个Array都是一堆tuple, 每个都是由一个ID和一个数值构成. 问题是从每个array中找一个tuple, 使得tuple中数值之和最大但不超过M的那些tuple的ID pair.

---------------------------------------------------------------------------------------------------------------------------------
第一道是亚麻build warehouse, (x, y)， 求离原点最近的点， top k. 输出top k.  ---> 用priorityqueue 
第二题是那个推荐movie的题 就是找某个movie相似的 rating 最高的 top k个movie  --->也是priority queues

---------------------------------------------------------------------------------------------------------------------------------
1. Given a string array representing a throw ball blocks, each string is either a number, +, Z, X. Calculate total. If number, just add to total. If +, add last 2 scores to total. If Z, remove last score from total. If X, double last score and add to toal. Use 0 for any missing last score. 有些 corner cases 要考虑。
2. 地里说过的 movie network, return N highest rating movies.
---------------------------------------------------------------------------------------------------------------------------------
第一题就是 Top K closet。Input类似是这样： [[1,3],[2,1],[-1,8]]， 然后找出 K 个最接近 [0,0] 的点。不管是包装是最近的牛排店还是最近的vegetarian restaurant，都是在搞这个东西。就一个Heap，比较（-distance)，一旦超了K就 heappop。 最后Output要求是List of list， 然后return的是要从最近的开始排列。

第二题就是 DeviceCapacity。Input类似是这样 front = [[1,3000],[2,5000],[3,7000],[4,10000]]；back =[[1,2000],[2,3000],[3,4000],[4,5000]]，Capacity = 10000, 要求就是所有front & back 的combination中最大的且<= Capacity的id number。像这个Input就要output出 [[2,4],[3,2]]。是的要考虑有可能有相同最多的且Valid的Capacity的组合。还有另外一个情景就是那个Amazon Air的Optimal 距离。也是给两个list，然后return最optimal的组合。个人用的是暴力解，由于因为一定要从两个list中各取一个，lz觉得暴力解最直接，也不会让code看起来too complicated。如果有大神有更好的解法，欢迎讨论！

Lz没碰到但是也是最近很高频的题就是在2d array里找Shortest Path。类似蠡口武林无，但是简化版。相似的是Input是一个grid，0可以走，1是Obstacle不能走。不同的是起点一定是[0,0]，然后终点是唯一那个grid[j] = 9的时候，并且每一次只能走一格。最后return最少的步数。传统的BFS或者Dijsktra都可以做。

做完coding，15min的“describe my approach “时间非常来不及。一题有两空，一个是描述你的code，第二个是time complexity。因为交不了第一题是不能写第二题的，所以大家一定要一进去就赶着写。

最后再有个workstyle的题就结束了。


第二题BACK先sort，for each element i in FRONT, search for lower_bound(capacity-i).
输出的candidates用max stack存储，有新来的就一直pop直到top等于新来的或者stack为空。
O(N*N) -> O(NlogN) 
---------------------------------------------------------------------------------------------------------------------------------
题目就是找距离原点(0,0) 最进的K个点，LZ是用priorityQueue 做的，逻辑还是比较简单的。
一提交有test case失败了，而且还没有给出足够的错误信息，尝试了好久，最后终于弄清楚是由于要判断输入为空。。。
---------------------------------------------------------------------------------------------------------------------------------
算法部分第一题shortest distance between two nodes in BST.
时间复杂度 O（nlgn）
第二题是Count number of substrings with k distinct characters.
时间复杂度O（n＊k）
https://www.geeksforgeeks.org/shortest-distance-between-two-nodes-in-bst/
https://www.geeksforgeeks.org/count-number-of-substrings-with-exactly-k-distinct-characters/
---------------------------------------------------------------------------------------------------------------------------------
