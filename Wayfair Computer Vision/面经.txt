
12月初去的wayfair onsite。面的是Data Scientist岗位，我的岗位比较特殊，是关于Computer Vision的。
面试一共三轮，没有很难的算法题，多数都是case interview。最后一轮是behavior不过也考了case。
1. 国人小哥，怎么做recommendation system，给定历史用户数据，首先分析怎么找特征（用户信息，偏好家具类型，价格等等），着重从商品图片入手对图片进行特征提取和分析。怎么根据图片的相似性进行用户特征抓取和推荐。

2. 外国小哥，纯算法，就一道很简单，likou原题。给定一个整数，求其近似整数平方根，如144->12, 150->12。二分法即可。

3. Behavior问题问了半个小时，就是以前项目开发的过程啊，如果跟踪客户需求等等。最后让以把客户当白痴的方法向他们讲述一个自己设计的系统。估计就跪在这里了。

觉得CV方向的DS还是喜欢招博士一些。大家加油。


电面：
1. 怎么定位一张图片中的一个物体，比如一张图片定位椅子在哪里。可以用CV传统算法或CNN. 
2. 3D reconstruction，传统CV算法

-------------------------------------------------------------------------------------------------
大概是2018.12月猎头在linkedin上的联系，聊好了之后就开始了面试。

第一轮就是和猎头的电话面试，大概45分钟左右。涉及到的问题主要有：
1. 你对WF了解多少？
2. 你做过什么相关的项目？
3. 为什么要选择跳槽？
...
总之这一轮和平常的猎头面差不多，时间会更长一些。把自己的简历上的经历全部弄熟，就没有什么问题。

他家效率很高，很快约谈了下一轮。


第二轮是技术面，一个白人小哥，非常友好。面试题目是device graph。

上来就问我有没有问题要问他。 我说暂时没有，可能我们聊多了之后对你们的case更了解之后会有更多的问题。（其实我觉得这里可以事先先准备一下。）

他问得非常循序渐进，先问：我们为什么要为用户建立device graph,好处是什么？回答 1. 对用户进行product recommendation非常有帮助，因为可以了解到用户以往的browsing history, orders等等。2. （应该是一个比较加分的回答）对于我们计算market campaign的实际效果有帮助。就是如果我们在某个地方投入了广告，在我们计算这个广告的performance的时候，我们可以通过device graph知道用户是以前就来过，还是由于我们的marketing才来的。然后他问，当我们有了许多devices的信息，我们可以用哪些features来判断是否属于同一用户呢？我记得我答了诸如ip address, system (iOS, Android, Win, Mac, ...),  email address, area等信息。他说ok。后边的我没听太懂，只记得他说假设有一个大的table, rows是每一个device-user pair, column是所有的features, 问这个table有什么问题。答案是这个table太大了，因为不是所有的device和user都有pair(我听得一脸懵逼)。具体后边的follow-up实在记不得了，只记得他问了用哪个classifier最efficient, 我回答的是definitely not SVM, 因为你们这个问题肯定是一个multi-class的problem， 如果用SVM的话需要好多次1vs all, 这样子就太慢了。我建议一开始先用linear regression, 不行的话再用random forest, whose nature is a multi-class classifier. 他说make sense. 

最后他还问了一句，有没有一些questions你expect me to ask? 我说我以为你会问我一些简历上的问题，然后问为什么选择这个算法之类的。他接着就吐槽了一下问简历不太好，因为大家都超级熟悉简历，简历明显不是一个很好的discriminator. 我表示深刻赞同，他对我的理解表示非常满意。（我真是醉了）

第二天收到了面试邀请。 

Onsite面经：

一共四轮，第一轮普通面，二三轮是case, 最后一轮是coding. 

第一轮30分钟，主要问我们对WF的了解（为什么WF），为什么要跳槽以及做过什么相关的经历。key只有一个，千万千万不要说前东家坏话，一点点都不行。我当时暗示了一下现在工作的地方年龄太大，她瞬间就眉头一皱。我的心凉了半截。

第二轮是email marketing的case, 参考我附近阿里"email marketing"的第一个大神的回答，一模一样。这一轮他一开始还问了一下简历，并且他是挑简历最后边的内容问的，可能WF员工都防着简历的前几个project吧，毕竟都是大家最熟悉的。所以大家一定要对简历所有的内容都非常非常非常熟才行。我这次跪掉我觉得很大一部分原因就是他们老是挑简历里边边边角角的东西问，有些东西我已经有些时间没接触了，所以不太熟。

第三轮是NLP的内容。一开始又是问了一些简历里边边角角的东西（哭。。。）。 他知道我是CV背景的，所以case开始后边指导边问了一些normalization, stemming&lemmatization, representation（TFIDF）等pre-processing的问题，无压力。后边他说it comes the juicy part, 说如果现在有了关于每个商品的text description, 并且获得了他们的tfidf representation, 如何对他们进行分类到不同的tag. 紧接着问了feature selection, PCA的问题。楼主在这里准备得不是很充分，跪。

第四轮是coding, 说给定一个basket, 里面有[['apple',4],['banana', 3],['orange', 5], ...], 让我们写一个program，input是basket, 和一个integer, output一个水果。这个integer如果是[0,4)，output "apple", 如果是[4,7), output "banana", 如果是[7,12), output "orange", ....  我第一步是建立了一个dictionary, key是水果名，value是数值范围。然后查找那个integer属于哪个范围。 假如一共有n种水果， 这个方法time complexity是O(n), space也是O(n)。应该还有更好的解法吧，欢迎大家讨论。

Link我找不到了，我把那个大神的回答贴上来吧。（以下内容均为我复制粘贴该大神的）

•给用户发的广告email的模板里面有9行x2列,共18个位置, 怎么确定这18个不同的广告(他们叫event)哪个更有效?"
•我的答案是: 我们可以通过多个metric来衡量: 1.广告的点击率 (CTR , click through rate), 同样是发出去100次的广告, 被用户点了80次的和只点了20次的比, 点了80次的对于用户来讲就是更有吸引力;  2. 广告的转化率(conversion rate, 也就是用户通过广告点进来以后,还完成了消费), 哪个广告的消费率越高, 哪个就更有效.

•小哥说, "很好, 咱们就看CTR吧, 因为conversion rate一般都很低, 所以数据量有限. CTR 里面经常会有noise, 比如, 发出去的邮件, event可能还没完全加载, 用户就已经点进来了. 所以这些点击并不能算在event头上, 我们该怎么办?"
•我的答案是 "event有没有加载不是可以track么? 你发出去的邮件不是有邮箱地址么? 你比对一下email address, 哪些click的event loading没有完成, 把这些email的events去掉不就可以了?"

•小哥:"恩,我们确实可以这么做. 我的下一个问题是: 一封邮件里18个广告位有没有区别?比如第一排和最后一排?"
•我:"这个问题提得好. 当然有区别, 所以我们不能consider their importance uniformly. We need to define a decay or discount factor when we calculate CTR for each event position."
我:"首先,我们define 这个factor的目的是为了看每个position的natural CTR without any recommendation or personalization. So, data need to be unbiased. To achieve that, 我们可以把historical data里面的new user都挑出来, 选择new user的原因是we don't know anything about them, so the events in their emails are more closed to unbiased. Then we can compute CTR for each of 18 positions, which can be used to define discount factor."


-------------------------------------------------------------------------------------------------

回馈地里，提供一下今天上午的新鲜面经～

面的是Data Science - algo & pricing team。上来面试官先介绍了一下data science团队的基本构成和大体工作内容，然后就share screen了wayfair的网站开始case，case就是on sale tag对商品销售的影响。具体信息是the company's marketing team will choose what products to promote every two weeks, and send marketing email of these promotions to customers, how would you estimate the average effect of the tag


1. base on the historical data，如何衡量effect，怎么考虑其他可能的disruptive factors and consider only the sale tag's effect
2. we would like to conduct AB testing, how would you design the experiment. How would you evaluate the result?
3. say for example the result from AB testing suggests that the tag would have a positive effect on products' sale, how would you go on propose how to measure the amount of the sale tag's effect? Given that we have product feature vector for each product.
4. modify the above model to adjust for product level, consumer+product level.


之前看地里面经的时候觉得这样一个topic要怎么问45分钟，结果确实聊了很久，整体感觉是每一个问题都会问到很细节，到具体怎么建model怎么选feature怎么interpret result的程度～
-------------------------------------------------------------------------------------------------
昨天刚面完wayfair DS Algorithm and profit 组。过来分享一下面经。
11月初电面，一个物理phd小哥，基本就是问问你的简历。聊一聊你的project（最好准备一个machine learning的），会问一些细节，比如你为啥用这个model 不用 那个 model，解释一下这个model是啥意思，你该如何从头开始建模等等。接着就是一个case。Wayfair的case说实话，没法做专门的准备，基本都是面试官当前在做的project。但你可以准备一些比较general的，因为wayfair做的东西本质是recommendation system，所以你可以看看recommendation system 的书，不用看的很细，就是看看有啥概念你需要了解一下。而且因为wayfair是网上购物，那你需要了解一下online shopping 相关的概念，最后基本就是把脑洞打开点。技术上的你要知道啥是colaborate filtering，啥是feature filtering。具体machine learning的东西他们不会问的太细，毕竟都是调包。电面的case是关于如何确认登陆的是同一个人。

之后16号终面，2case1个behavior。两个case基本也都是怎么group together，用什么metrics，用什么模型等等。需要注意的是，business sense也很重要。比如其中一问是“如果你只有有限的资源去分析公司的产品，你该如何处理优先级？” 正确答案是“优先看量大利润高的产品。。。“。还有”among all the features, what do you think is the most imporant feature" 答案可以是“price”. behavior的话，就是仔细问问你的简历，然后让你讲讲你的project和research，等等。

哦，最后hr会和你要code sample。需要100line以上，比较substantial的，写成class， well documented什么的。

材料的话，我推荐这两本书，网上都可以下：
Hands-On Machine Learning with Scikit-Learn and TensorFlow （大略浏览一下）
Mining of Massive Datasets （重点看看similarity和recoomendation system的章节，有不少有用的概念）
当然，你也要浏览一下wayfair的网站，看看wayfair的产品都有哪些feature （price，manufacturer，specification等等），聊的时候起码知道能从那些方面描述产品.

补充内容 (2018-3-6 10:55):
2018-3-5 补充：入职一个月，这两周每天组里DS都在面试，想跟大家说一下。面试的case很多应聘的提前准备原题这事我们公司也知道，所以其实最近的面试开始侧重于深挖你的resume 上 project细节。希望大家注意。

-------------------------------------------------------------------------------------------------
上来先是双方自我介绍，然后就开始case study：问如何得知两条记录归属于同一个用户？

大概问了data metric，每个feature的合理性和方向性，选择什么model，为什么选择这些model，从什么方面判断model的准确性...
-------------------------------------------------------------------------------------------------
受益于地里面经，来回馈一下自己的面试过程。我申的ds组（非algo）面我的2个面试官一个merchandise组负责label product tagging一个印度小哥在display MKT。
面试分成10min介绍自己+30-45 min case + Q&A. 着重问了我简历上text analytics项目，没有特别多challenge。然后就是case了，依旧是match same user的题！其它地里面经已经可以覆盖所有问题了：

这部分我花了好久才明白是什么意思，还说了Imbalance data的问题，但好像说多了。。。面试官很有耐心一遍遍解释给我提示最后终于救回来了。。。

然后问我有没有什么问题，我就问他俩是不是一个组的，typical project, challenge，team work culture什么的然后就到点结束了。



-------------------------------------------------------------------------------------------------
刚在另外一个帖子里面回了自己对ml面试的总结，单独发个帖子吧。其实不是专门做machine learning的，但是强行申请了各家的ml的职位。

1. 几本教科书。。。（ESl, PRML或者Kevin Murphy的ML)。看比较浅的就行了，因为面试时候大概一般推不了太复杂的公司。还有andrew ng的课件和notes， 不是coursera上的，就是他自己的课的，记不得地址了。里面有个讲怎么分析模型该怎么改进的，bias vs variance, cost fucntion或者optimization方法对不对是否收敛了之类的。同时也看了学校老师的ml的课件，感觉应付基础知识够了。

2. 几个基本的模型的推导，cost function等等，比如naive Bayes， linear/logistic regression, random forest/decision tree

3. performance measure: 几个metric，classification/regression分别用啥等等。基本从accuracy，confusion matrix, recall/precision, F-score 到 ROC吧。multiclass classification怎么衡量。recall, precision, Fscore之类的具体是怎么算的，应该也得记住

4. unbalanced dataset 怎么处理，这个基本每家都会问。（有家startup还问了我知不知道SMOTE。。。）

5. bias variance这个基本每家也都会问 (Random Forest到底是什么呢，难道真的说是low bias low variance?)

6. ml design: 感觉大部分时候是看feature engineering的感觉，此外就是怎么定义这个问题，是classification/regression还是unsupervised。感觉公司的话，主要还是在supervised方面来考察

7. ml coding: 感觉在半个小时时间里面只能写Kmeans或者KNN。。。 knn的话，选topK的话可以用quick selection 达到 O(n) 来代替sort或者heap。或者就是distance measure的变种。。。比如Zillow家的cosine distance。话说我刚巧之前一个project尝试了几乎所有的distance measure。。。否则应该还不会记得cosine distance的公式怎么写。

最后有个问题就是：对于一个classification问题，如果training set里面 label是有错误，改怎么处理。我不知道到底该怎么解决，一般说出来的方法是，就是train一个带probability的model(比如logistic regression)，然后根据预测的结果，两边都选probability高的，重新train。 （潜在缺点是，可能全选了错label的，所以可能需要多次random sampling


8. Recommendation system： Netfix 如何推荐，亚马逊产品怎么推荐，Fb的Newsfeed怎么排序等等。这些问题面试ML SDE的时候也会问到。